{"version":3,"sources":["components/defaultImage.jpg","components/listview.js","components/detailview.js","App.js","index.js"],"names":["DataList","shows","className","gutter","map","item","index","span","hoverable","style","width","cover","alt","src","show","image","medium","defaultImg","name","language","status","to","id","DataDetailPage","useParams","showsid","parseInt","updateditems","filter","element","data","score","averageRuntime","schedule","time","days","updated","premiered","ended","genres","toString","rating","average","weight","href","url","officialSite","previousepisode","dangerouslySetInnerHTML","__html","summary","App","useState","setShows","isLoading","setIsLoading","useEffect","fetchData","a","fetch","response","ok","Error","json","result","console","log","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAAe,G,OAAA,IAA0B,0C,OCgC1BA,EA1BE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACf,OACE,mCACA,sBAAKC,UAAU,eAAf,UACE,8CACA,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACCF,EAAMG,KAAI,SAACC,EAAKC,GAAN,eACP,cAAC,IAAD,CAAkBC,KAAM,EAAxB,SACI,eAAC,IAAD,CACGC,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MAAO,qBAAKT,UAAU,cAAcU,IAAI,UAAUC,KAAS,OAAJR,QAAI,IAAJA,GAAA,UAAAA,EAAMS,YAAN,mBAAYC,aAAZ,eAAmBC,SAAUC,IAHvF,UAKA,6BAAKZ,EAAKS,KAAKI,OACf,6CAAgBb,EAAKS,KAAKK,SAA1B,eAAgDd,EAAKS,KAAKM,UAC1D,8BAAK,cAAC,IAAD,CAAMlB,UAAU,WAAWmB,GAAE,kBAAahB,EAAKS,KAAKQ,IAApD,6BAREhB,c,QC2CRiB,EApDQ,SAAC,GAAa,IAAZtB,EAAW,EAAXA,MAEjBqB,EAAME,cAANF,GACDG,EAAUC,SAASJ,EAAG,IAEpBK,EAAe1B,EAAM2B,QAAO,SAACC,GAClC,OAAOA,EAAQf,KAAKQ,KAAOG,KAE3B,OACI,mCAEKE,EAAavB,KAAI,SAAC0B,EAAKxB,GAAN,uBACb,sBAAKJ,UAAU,sBAAf,UACG,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,qBAAqBW,KAAS,OAAJiB,QAAI,IAAJA,GAAA,UAAAA,EAAMhB,YAAN,mBAAYC,aAAZ,eAAmBC,SAAUC,EAAYL,IAAI,cAEzF,sBAAKV,UAAU,mBAAf,UACC,+CAAkB4B,EAAKhB,KAAKI,KAA5B,cAA6CY,EAAKC,SAElD,4CAAc,iCAASD,EAAKhB,KAAKK,WAAjC,eAA+D,iCAASW,EAAKhB,KAAKM,YAElF,8BACG,0CACWU,EAAKhB,KAAKkB,eADrB,yBAC2DF,EAAKhB,KAAKkB,oBAGxE,8BACE,kDAAoB,4BAAIF,EAAKhB,KAAKmB,SAASC,OAA3C,aAA+DJ,EAAKhB,KAAKmB,SAASE,KAAlF,gBAAqGL,EAAKhB,KAAKsB,QAA/G,SAGF,gCACE,6CAAe,4BAAIN,EAAKhB,KAAKuB,YAA7B,eAA2D,OAAJP,QAAI,IAAJA,GAAA,UAAAA,EAAMhB,YAAN,eAAYwB,QAAS,2CAC3E,0CAAaR,EAAKhB,KAAKyB,OAAOC,cAC9B,0CAAY,4BAAIV,EAAKhB,KAAK2B,OAAOC,UAAjC,eAAyD,4BAAIZ,EAAKhB,KAAK6B,eAG1E,4CAAc,mBAAGC,KAAMd,EAAKhB,KAAK+B,IAAnB,SAAyBf,EAAKhB,KAAK+B,SAEjD,gDAAkB,mBAAGD,KAAK,IAAR,UAAiB,OAAJd,QAAI,IAAJA,GAAA,UAAAA,EAAMhB,YAAN,eAAYgC,eAAgB,+DAE3D,kDAAoB,mBAAGF,KAAK,IAAR,UAAiB,OAAJd,QAAI,IAAJA,GAAA,UAAAA,EAAMhB,YAAN,mBAAYiC,uBAAZ,eAA6BH,OAAQ,wDAErE,qBAAKI,wBAAyB,CAAEC,OAAQnB,EAAKhB,KAAKoC,gBA9Bd5C,S,OCmC5C6C,MA5Cf,WACI,MAAyBC,mBAAS,IAAlC,mBAAOnD,EAAP,KAAaoD,EAAb,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KAqBA,OAnBAC,qBAAW,WACT,IAAOC,EAAS,uCAAG,8BAAAC,EAAA,6DACfH,GAAa,GADE,kBAGWI,MAAM,6CAHjB,WAGNC,EAHM,QAICC,GAJD,sBAKL,IAAIC,MAAM,wBALL,uBAOSF,EAASG,OAPlB,OAONC,EAPM,OAQZX,EAASW,GACTT,GAAa,GATD,kDAYZU,QAAQC,IAAR,MAZY,0DAAH,qDAehBT,MACA,IAECH,EAEC,qBAAKpD,UAAU,kBAAf,SAAiC,6CAKrC,sBAAKA,UAAU,MAAf,UAED,cAAC,IAAD,CAAOiE,KAAK,IAAIC,OAAK,EAArB,SACI,cAAC,EAAD,CAAUnE,MAAOA,MAGrB,cAAC,IAAD,CAAOkE,KAAK,cAAZ,SACI,cAAC,EAAD,CAAgBlE,MAAOA,UCrC9BoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACM,cAAC,EAAD,QAIRC,SAASC,eAAe,U","file":"static/js/main.4a1e4fa7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/defaultImage.70f66c0c.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card ,Row,Col} from 'antd';\r\nimport './listview.css';\r\nimport defaultImg from \"./defaultImage.jpg\";\r\n\r\nconst DataList = ({shows}) => {\r\n    return(\r\n      <>\r\n      <div className=\"card-wrapper\">\r\n        <h1>Show Listing</h1>\r\n        <Row gutter={16}>    \r\n        {shows.map((item,index) =>(  \r\n            <Col  key={index} span={8}>       \r\n                <Card \r\n                   hoverable\r\n                   style={{ width: 350 }}\r\n                   cover={<img className=\"cover-image\" alt=\"example\" src={item?.show?.image?.medium || defaultImg} />}\r\n                 >\r\n                <h2>{item.show.name}</h2>\r\n                <h4>Language : {item.show.language} | Status : {item.show.status}</h4>\r\n                <div><Link className=\"btn-link\" to={`/detail/${item.show.id}`}>Read more</Link></div>\r\n                      \r\n                </Card>\r\n             </Col>\r\n    ))}  \r\n      </Row>\r\n      </div>  \r\n      </>\r\n    );\r\n};\r\n\r\nexport default DataList;","import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport defaultImg from \"./defaultImage.jpg\";\r\n\r\nconst DataDetailPage = ({shows}) => {\r\n\r\n   let {id} = useParams();\r\n   let showsid = parseInt(id,10);\r\n   \r\n   const updateditems = shows.filter((element) =>{\r\n    return element.show.id === showsid;\r\n  });\r\n    return(\r\n        <>\r\n           {\r\n             updateditems.map((data,index) => (\r\n                 <div className=\"detail-view-wrapper\" key={index}>\r\n                    <div className=\"image-container\">\r\n                        <img className=\"image-view-wrapper\" src={data?.show?.image?.medium || defaultImg} alt='example'/>\r\n                    </div>\r\n                     <div className=\"detail-container\">\r\n                      <h1> Show Name : {data.show.name} | Score : {data.score}</h1>\r\n\r\n                      <p>Language : <strong>{data.show.language}</strong> | Status : <strong>{data.show.status}</strong></p>\r\n\r\n                      <div>\r\n                         <p>\r\n                          Runtime: {data.show.averageRuntime}  |  AverageRuntime : {data.show.averageRuntime}\r\n                         </p>\r\n                      </div>\r\n                      <div>\r\n                        <p>schedule | time: <b>{data.show.schedule.time}</b> | Days : {data.show.schedule.days} | updated : {data.show.updated} </p>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <p>premiered : <b>{data.show.premiered}</b> | ended : {data?.show?.ended || <b>running</b>}</p>\r\n                         <p>Genres : {data.show.genres.toString()}</p>\r\n                         <p>Rating : <b>{data.show.rating.average}</b> | weight : <b>{data.show.weight}</b></p>\r\n                      </div>\r\n\r\n                      <p>Show Url : <a href={data.show.url}>{data.show.url}</a></p>\r\n\r\n                      <p>OfficialSite : <a href='/'>{data?.show?.officialSite || <b>officialSite not vailabel</b>}</a></p>\r\n                      \r\n                      <p>previousepisode: <a href='/'>{data?.show?.previousepisode?.href || <b>Not available link</b>}</a></p>\r\n                     \r\n                       <div dangerouslySetInnerHTML={{ __html: data.show.summary }} />\r\n                     \r\n                     </div>\r\n                 </div>\r\n             ))\r\n           }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DataDetailPage;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport DataList from './components/listview';\nimport {Route} from 'react-router-dom';\nimport DataDetailPage from './components/detailview';\nimport 'antd/dist/antd.css';\n\nfunction App() {\n    const [shows,setShows] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n   \n    useEffect (() => {\n      const  fetchData = async() => {\n          setIsLoading(true);\n           try{\n             const response = await fetch('https://api.tvmaze.com/search/shows?q=all');\n             if(!response.ok){\n              throw new Error('Something went Wrong');\n            }\n             const result = await response.json();\n             setShows(result);\n             setIsLoading(false);\n    \n           }catch(error){\n             console.log(error);\n           }\n      };\n      fetchData();\n    },[]);\n\n    if(isLoading){\n      return (\n        <div className=\"loading-wrapper\"><p>Loading...</p></div>\n      );\n    }\n\n  return (\n    <div className=\"App\">\n\n   <Route path='/' exact>   \n       <DataList shows={shows}/>\n   </Route>\n\n   <Route path='/detail/:id'>   \n       <DataDetailPage shows={shows}/>\n   </Route>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n          <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}